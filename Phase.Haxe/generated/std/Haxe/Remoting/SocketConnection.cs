//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.Remoting
{
    [External]
    [Name("haxe.remoting.SocketConnection")]
    public partial class SocketConnection
        : Haxe.Remoting.AsyncConnection
    {
        [Name("__path")]
        protected virtual extern Haxe.HaxeArray<Haxe.HaxeString> __path { get; set; }
        [Name("__data")]
        protected virtual extern dynamic __data { get; set; }
        [Name("resolve")]
        public virtual extern Haxe.Remoting.AsyncConnection Resolve(string name);
        [Name("call")]
        public virtual extern void Call(Haxe.HaxeArray<object> @params, Action<object> onResult = default(Action<object>));
        [Name("setErrorHandler")]
        public virtual extern void SetErrorHandler(Action<object> h);
        [Name("setErrorLogger")]
        public virtual extern void SetErrorLogger(Action<Haxe.HaxeArray<string>, Haxe.HaxeArray<object>, object> h);
        [Name("setProtocol")]
        public virtual extern void SetProtocol(Haxe.Remoting.SocketProtocol p);
        [Name("getProtocol")]
        public virtual extern Haxe.Remoting.SocketProtocol GetProtocol();
        [Name("close")]
        public virtual extern void Close();
        [Name("processMessage")]
        public virtual extern void ProcessMessage(string data);
        [Name("defaultLog")]
        protected virtual extern void DefaultLog(dynamic path, dynamic args, object e);
        [Name("new")]
        protected virtual extern void New(dynamic data, Haxe.HaxeArray<string> path);
        [Name("create")]
        public static extern SocketConnection Create(Haxe.Remoting.Socket s, Haxe.Remoting.Context ctx = default(Haxe.Remoting.Context));
    }
}
