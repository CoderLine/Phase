//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.Crypto
{
    [External]
    [Name("haxe.crypto.Sha224")]
    public partial class Sha224
    {
        [Name("doEncode")]
        protected virtual extern Haxe.HaxeArray<Haxe.HaxeInt> DoEncode(string str, int strlen);
        [Name("ROTR")]
        protected virtual extern Haxe.HaxeInt ROTR(int X, int n);
        [Name("SHR")]
        protected virtual extern Haxe.HaxeInt SHR(int X, int n);
        [Name("Ch")]
        protected virtual extern Haxe.HaxeInt Ch(int x, int y, int z);
        [Name("Maj")]
        protected virtual extern Haxe.HaxeInt Maj(int x, int y, int z);
        [Name("Sigma0")]
        protected virtual extern Haxe.HaxeInt Sigma0(int x);
        [Name("Sigma1")]
        protected virtual extern Haxe.HaxeInt Sigma1(int x);
        [Name("Gamma0")]
        protected virtual extern Haxe.HaxeInt Gamma0(int x);
        [Name("Gamma1")]
        protected virtual extern Haxe.HaxeInt Gamma1(int x);
        [Name("hex")]
        protected virtual extern Haxe.HaxeString Hex(Haxe.HaxeArray<int> a);
        [Name("new")]
        public virtual extern void New();
        [Name("encode")]
        public static extern Haxe.HaxeString Encode(string s);
        [Name("make")]
        public static extern Haxe.Io.Bytes Make(Haxe.Io.Bytes b);
        [Name("str2blks")]
        private static extern Haxe.HaxeArray<Haxe.HaxeInt> Str2blks(string s);
        [Name("safeAdd")]
        private static extern Haxe.HaxeInt SafeAdd(int x, int y);
    }
}
