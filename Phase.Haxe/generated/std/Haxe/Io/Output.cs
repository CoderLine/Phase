//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.Io
{
    [External]
    [Name("haxe.io.Output")]
    public partial class Output
    {
        [Name("bigEndian")]
        public virtual extern Haxe.HaxeBool BigEndian { get; set; }
        [Name("writeByte")]
        public virtual extern void WriteByte(int c);
        [Name("writeBytes")]
        public virtual extern Haxe.HaxeInt WriteBytes(Haxe.Io.Bytes s, int pos, int len);
        [Name("flush")]
        public virtual extern void Flush();
        [Name("close")]
        public virtual extern void Close();
        [Name("set_bigEndian")]
        protected virtual extern Haxe.HaxeBool Set_bigEndian(bool b);
        [Name("write")]
        public virtual extern void Write(Haxe.Io.Bytes s);
        [Name("writeFullBytes")]
        public virtual extern void WriteFullBytes(Haxe.Io.Bytes s, int pos, int len);
        [Name("writeFloat")]
        public virtual extern void WriteFloat(double x);
        [Name("writeDouble")]
        public virtual extern void WriteDouble(double x);
        [Name("writeInt8")]
        public virtual extern void WriteInt8(int x);
        [Name("writeInt16")]
        public virtual extern void WriteInt16(int x);
        [Name("writeUInt16")]
        public virtual extern void WriteUInt16(int x);
        [Name("writeInt24")]
        public virtual extern void WriteInt24(int x);
        [Name("writeUInt24")]
        public virtual extern void WriteUInt24(int x);
        [Name("writeInt32")]
        public virtual extern void WriteInt32(int x);
        [Name("prepare")]
        public virtual extern void Prepare(int nbytes);
        [Name("writeInput")]
        public virtual extern void WriteInput(Haxe.Io.Input i, int bufsize = default(int));
        [Name("writeString")]
        public virtual extern void WriteString(string s);
    }
}
