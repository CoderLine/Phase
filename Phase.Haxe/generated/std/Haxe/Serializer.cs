//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe
{
    [External]
    [Name("haxe.Serializer")]
    public partial class Serializer
    {
        [Name("buf")]
        protected virtual extern Haxe.root.StringBuf Buf { get; set; }
        [Name("cache")]
        protected virtual extern Haxe.HaxeArray<dynamic> Cache { get; set; }
        [Name("shash")]
        protected virtual extern Haxe.Ds.StringMap<Haxe.HaxeInt> Shash { get; set; }
        [Name("scount")]
        protected virtual extern Haxe.HaxeInt Scount { get; set; }
        [Name("useCache")]
        public virtual extern Haxe.HaxeBool UseCache { get; set; }
        [Name("useEnumIndex")]
        public virtual extern Haxe.HaxeBool UseEnumIndex { get; set; }
        [Name("toString")]
        public virtual extern Haxe.HaxeString ToString();
        [Name("serializeString")]
        protected virtual extern void SerializeString(string s);
        [Name("serializeRef")]
        protected virtual extern Haxe.HaxeBool SerializeRef(object v);
        [Name("serializeFields")]
        protected virtual extern void SerializeFields(object v);
        [Name("serialize")]
        public virtual extern void Serialize(object v);
        [Name("__getField")]
        protected virtual extern dynamic __getField(object o, string f);
        [Name("serializeException")]
        public virtual extern void SerializeException(object e);
        [Name("new")]
        public virtual extern void New();
        [Name("USE_CACHE")]
        public static extern Haxe.HaxeBool USE_CACHE { get; set; }
        [Name("USE_ENUM_INDEX")]
        public static extern Haxe.HaxeBool USE_ENUM_INDEX { get; set; }
        [Name("BASE64")]
        private static extern Haxe.HaxeString BASE64 { get; set; }
        [Name("BASE64_CODES")]
        private static extern Haxe.Ds.Vector<Haxe.root.Null<Haxe.HaxeInt>> BASE64_CODES { get; set; }
        [Name("run")]
        public static extern Haxe.HaxeString Run(object v);
    }
}
