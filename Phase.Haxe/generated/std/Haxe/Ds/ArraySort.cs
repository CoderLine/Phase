//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.Ds
{
    [External]
    [Name("haxe.ds.ArraySort")]
    public partial class ArraySort
    {
        [Name("sort")]
        public static extern void Sort<T>(Haxe.HaxeArray<T> a, Func<T, T, int> cmp);
        [Name("rec")]
        private static extern void Rec<T>(Haxe.HaxeArray<T> a, Func<T, T, int> cmp, int from, int to);
        [Name("doMerge")]
        private static extern void DoMerge<T>(Haxe.HaxeArray<T> a, Func<T, T, int> cmp, int from, int pivot, int to, int len1, int len2);
        [Name("rotate")]
        private static extern void Rotate<T>(Haxe.HaxeArray<T> a, Func<T, T, int> cmp, int from, int mid, int to);
        [Name("gcd")]
        private static extern Haxe.HaxeInt Gcd(int m, int n);
        [Name("upper")]
        private static extern Haxe.HaxeInt Upper<T>(Haxe.HaxeArray<T> a, Func<T, T, int> cmp, int from, int to, int val);
        [Name("lower")]
        private static extern Haxe.HaxeInt Lower<T>(Haxe.HaxeArray<T> a, Func<T, T, int> cmp, int from, int to, int val);
        [Name("swap")]
        private static extern void Swap<T>(Haxe.HaxeArray<T> a, int i, int j);
        [Name("compare")]
        private static extern Haxe.HaxeInt Compare<T>(Haxe.HaxeArray<T> a, Func<T, T, int> cmp, int i, int j);
    }
}
