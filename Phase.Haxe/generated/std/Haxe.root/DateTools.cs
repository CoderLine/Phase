//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.root
{
    [External]
    [Name("DateTools")]
    public partial class DateTools
    {
        [Name("DAY_SHORT_NAMES")]
        private static extern Haxe.HaxeArray<Haxe.HaxeString> DAY_SHORT_NAMES { get; set; }
        [Name("DAY_NAMES")]
        private static extern Haxe.HaxeArray<Haxe.HaxeString> DAY_NAMES { get; set; }
        [Name("MONTH_SHORT_NAMES")]
        private static extern Haxe.HaxeArray<Haxe.HaxeString> MONTH_SHORT_NAMES { get; set; }
        [Name("MONTH_NAMES")]
        private static extern Haxe.HaxeArray<Haxe.HaxeString> MONTH_NAMES { get; set; }
        [Name("__format_get")]
        private static extern Haxe.HaxeString __format_get(Haxe.root.Date d, string e);
        [Name("__format")]
        private static extern Haxe.HaxeString __format(Haxe.root.Date d, string f);
        [Name("format")]
        public static extern Haxe.HaxeString Format(Haxe.root.Date d, string f);
        [Name("delta")]
        public static extern Haxe.root.Date Delta(Haxe.root.Date d, double t);
        [Name("DAYS_OF_MONTH")]
        private static extern Haxe.HaxeArray<Haxe.HaxeInt> DAYS_OF_MONTH { get; set; }
        [Name("getMonthDays")]
        public static extern Haxe.HaxeInt GetMonthDays(Haxe.root.Date d);
        [Name("seconds")]
        public static extern Haxe.HaxeFloat Seconds(double n);
        [Name("minutes")]
        public static extern Haxe.HaxeFloat Minutes(double n);
        [Name("hours")]
        public static extern Haxe.HaxeFloat Hours(double n);
        [Name("days")]
        public static extern Haxe.HaxeFloat Days(double n);
        [Name("parse")]
        public static extern dynamic Parse(double t);
        [Name("make")]
        public static extern Haxe.HaxeFloat Make(dynamic o);
        [Name("makeUtc")]
        public static extern Haxe.HaxeFloat MakeUtc(int year, int month, int day, int hour, int min, int sec);
    }
}
