//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.root
{
    [External]
    [Name("Reflect")]
    public partial class Reflect
    {
        [Name("hasField")]
        public static extern Haxe.HaxeBool HasField(object o, string field);
        [Name("field")]
        public static extern dynamic Field(object o, string field);
        [Name("setField")]
        public static extern void SetField(object o, string field, object value);
        [Name("getProperty")]
        public static extern dynamic GetProperty(object o, string field);
        [Name("setProperty")]
        public static extern void SetProperty(object o, string field, object value);
        [Name("callMethod")]
        public static extern dynamic CallMethod(object o, Haxe.Function func, Haxe.HaxeArray<object> args);
        [Name("fields")]
        public static extern Haxe.HaxeArray<Haxe.HaxeString> Fields(object o);
        [Name("isFunction")]
        public static extern Haxe.HaxeBool IsFunction(object f);
        [Name("compare")]
        public static extern Haxe.HaxeInt Compare<T>(T a, T b);
        [Name("compareMethods")]
        public static extern Haxe.HaxeBool CompareMethods(object f1, object f2);
        [Name("isObject")]
        public static extern Haxe.HaxeBool IsObject(object v);
        [Name("isEnumValue")]
        public static extern Haxe.HaxeBool IsEnumValue(object v);
        [Name("deleteField")]
        public static extern Haxe.HaxeBool DeleteField(object o, string field);
        [Name("copy")]
        public static extern T Copy<T>(T o);
        [Name("makeVarArgs")]
        public static extern dynamic MakeVarArgs(Func<Haxe.HaxeArray<object>, object> f);
        [Name("makeVarArgs")]
        public static extern dynamic MakeVarArgs(Action<Haxe.HaxeArray<object>> f);
    }
}
