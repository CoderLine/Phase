//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.root
{
    [External]
    [Name("Math")]
    public partial class Math
    {
        [Name("PI")]
        public static extern Haxe.HaxeFloat PI { get; private set; }
        [Name("NEGATIVE_INFINITY")]
        public static extern Haxe.HaxeFloat NEGATIVE_INFINITY { get; private set; }
        [Name("get_NEGATIVE_INFINITY")]
        private static extern Haxe.HaxeFloat Get_NEGATIVE_INFINITY();
        [Name("POSITIVE_INFINITY")]
        public static extern Haxe.HaxeFloat POSITIVE_INFINITY { get; private set; }
        [Name("get_POSITIVE_INFINITY")]
        private static extern Haxe.HaxeFloat Get_POSITIVE_INFINITY();
        [Name("NaN")]
        public static extern Haxe.HaxeFloat NaN { get; private set; }
        [Name("get_NaN")]
        private static extern Haxe.HaxeFloat Get_NaN();
        [Name("abs")]
        public static extern Haxe.HaxeFloat Abs(double v);
        [Name("acos")]
        public static extern Haxe.HaxeFloat Acos(double v);
        [Name("asin")]
        public static extern Haxe.HaxeFloat Asin(double v);
        [Name("atan")]
        public static extern Haxe.HaxeFloat Atan(double v);
        [Name("atan2")]
        public static extern Haxe.HaxeFloat Atan2(double y, double x);
        [Name("ceil")]
        public static extern Haxe.HaxeInt Ceil(double v);
        [Name("cos")]
        public static extern Haxe.HaxeFloat Cos(double v);
        [Name("exp")]
        public static extern Haxe.HaxeFloat Exp(double v);
        [Name("floor")]
        public static extern Haxe.HaxeInt Floor(double v);
        [Name("log")]
        public static extern Haxe.HaxeFloat Log(double v);
        [Name("max")]
        public static extern Haxe.HaxeFloat Max(double a, double b);
        [Name("min")]
        public static extern Haxe.HaxeFloat Min(double a, double b);
        [Name("pow")]
        public static extern Haxe.HaxeFloat Pow(double v, double exp);
        [Name("random")]
        public static extern Haxe.HaxeFloat Random();
        [Name("round")]
        public static extern Haxe.HaxeInt Round(double v);
        [Name("sin")]
        public static extern Haxe.HaxeFloat Sin(double v);
        [Name("sqrt")]
        public static extern Haxe.HaxeFloat Sqrt(double v);
        [Name("tan")]
        public static extern Haxe.HaxeFloat Tan(double v);
        [Name("ffloor")]
        public static extern Haxe.HaxeFloat Ffloor(double v);
        [Name("fceil")]
        public static extern Haxe.HaxeFloat Fceil(double v);
        [Name("fround")]
        public static extern Haxe.HaxeFloat Fround(double v);
        [Name("isFinite")]
        public static extern Haxe.HaxeBool IsFinite(double f);
        [Name("isNaN")]
        public static extern Haxe.HaxeBool IsNaN(double f);
    }
}
