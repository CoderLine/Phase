//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a the Phase Extern Generator
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Phase;
using Phase.Attributes;
namespace Haxe.root
{
    [External]
    [Name("List")]
    public partial class List<T>
    {
        [Name("h")]
        protected virtual extern _List.ListNode<T> H { get; set; }
        [Name("q")]
        protected virtual extern _List.ListNode<T> Q { get; set; }
        [Name("length")]
        public virtual extern Haxe.HaxeInt Length { get; private set; }
        [Name("add")]
        public virtual extern void Add(T item);
        [Name("push")]
        public virtual extern void Push(T item);
        [Name("first")]
        public virtual extern Haxe.root.Null<T> First();
        [Name("last")]
        public virtual extern Haxe.root.Null<T> Last();
        [Name("pop")]
        public virtual extern Haxe.root.Null<T> Pop();
        [Name("isEmpty")]
        public virtual extern Haxe.HaxeBool IsEmpty();
        [Name("clear")]
        public virtual extern void Clear();
        [Name("remove")]
        public virtual extern Haxe.HaxeBool Remove(T v);
        [Name("iterator")]
        public virtual extern _List.ListIterator<T> Iterator();
        [Name("toString")]
        public virtual extern Haxe.HaxeString ToString();
        [Name("join")]
        public virtual extern Haxe.HaxeString Join(string sep);
        [Name("filter")]
        public virtual extern Haxe.root.List<T> Filter(Func<T, bool> f);
        [Name("map")]
        public virtual extern Haxe.root.List<X> Map<X>(Func<T, X> f);
        [Name("new")]
        public virtual extern void New();
    }
}
